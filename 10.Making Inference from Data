#Task 1 - Calculate confidence interval for `SalePrice`
# import packages
import pandas as pd
import numpy as np
from scipy import stats
import math

# Dataframe
data = pd.read_csv(path)

# Code starts here
np.random.seed(1)
# sample size
sample_size = 100

# z-critical Score
z_critical = stats.norm.ppf(q=0.95)

# sampling the dataframe
data_sample = (data['SalePrice']).sample(sample_size,random_state=0)

# finding the mean of the sample
sample_mean = data_sample.mean()
print("the mean of the sample",sample_mean)

# finding the standard deviation of the population
population_sample = (data['SalePrice'])
population_std = population_sample.std()
print('the standard deviation of the population',population_std)

# finding the margin of error
margin_of_error = z_critical*(population_std/math.sqrt(sample_size))
print('the margin of error',margin_of_error)

# finding the confidence interval
confidence_interval = (sample_mean - margin_of_error,sample_mean + margin_of_error)
print("the confidence interval",confidence_interval)
# finding the true mean
true_mean = data['SalePrice'].mean()
print('the true mean',true_mean)
# Code ends here





#Task 2 - Is the average Lot.Area less than 1200?
from statsmodels.stats.weightstats import ztest




# apply ztest 
z_statistic, p_value = ztest(data['Lot.Area'],value=1200,alternative='smaller') 
# print z statistic and p value
print("Z-statistics = ",z_statistic)
print("p-value = ",p_value)
if (p_value < z_statistic):
    inference = 'Accept'
    print(inference)
else:
    inference = 'Reject'
    print(inference)


# check the p-value
